{"version":3,"sources":["logo.png","services/fetchCharacters.js","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/Home.js","components/CharacterDetail.js","App.js","index.js"],"names":["module","exports","fetchCharacters","fetch","then","response","json","CharacterCard","props","image","name","species","className","src","alt","CharacterList","characters","query","filter","characterName","toUpperCase","includes","map","character","key","id","to","Filters","getUserQuery","type","onChange","value","Home","Fragment","CharacterDetail","routerProps","characterId","parseInt","match","params","length","item","origin","episode","status","App","state","bind","event","currentTarget","this","setState","getCharacters","data","results","logo","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eb904dba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","\nconst endpoint = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchCharacters = () => {\n  return fetch(endpoint).then(response => response.json());\n};\n   \nexport default fetchCharacters;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props =>{\n  const {\n    image,\n    name,\n    species\n  } = props;\n\n  return (\n    <div className=\"character-card\">\n      <img className=\"character-image\" src={image} alt={`Personaje ${name} de Rick & Morty`} />\n      <h2 className=\"character-name\">{name}</h2>\n      <p className=\"character-species\">{species} {(species === 'Human') ? <i className=\"fas fa-male\"></i> : <i className=\"fab fa-reddit-alien\"></i>}</p>\n    </div>\n  );\n};\n\nCharacterCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired\n}\nexport default CharacterCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport {Link} from 'react-router-dom';\n\nconst CharacterList = props => {\n  const {\n    characters,\n    query\n  } = props;\n\n  return (\n    <ol className=\"characters-list\">\n      {characters\n        .filter(characterName => characterName.name.toUpperCase().includes(query.toUpperCase()))\n        .map(character => {\n          return (\n            <li className=\"character\" key={character.id}>\n              <Link className=\"character-link\" to={`/character-detail/${character.id}`}>\n              <CharacterCard \n                image={character.image}\n                name={character.name}\n                species={character.species} \n              \n              />\n              </Link>\n            </li>\n          ); \n        })}\n    </ol>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired\n};\n\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = props => {\n  const{\n    getUserQuery,\n    query\n  } = props;\n  \n  return (\n    <div className=\"box-filters\">\n      <label className=\"label-input\">¿Qué personaje quieres buscar?</label>\n      <input className=\"user-query\" type=\"text\" onChange={getUserQuery} value={query}></input>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  getUserQuery: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired\n}\n\nexport default Filters;","import React from 'react';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const {\n    getUserQuery,\n    query,\n    characters\n  } = props;\n\n  return (\n    <React.Fragment>\n    <Filters \n      getUserQuery={getUserQuery} \n      query={query}\n    />\n\n    <CharacterList \n      characters={characters}\n      query={query} \n    />\n    </React.Fragment>\n  );\n};\n\nHome.propTypes = {\n  getUserQuery: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n  \n}\n          \nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n\nconst CharacterDetail = props => {\n  const {\n    routerProps,\n    characters\n  } = props;\n  const characterId = parseInt(routerProps.match.params.characterId); \n\n  if (characterId>characters.length){\n    return (\n      <React.Fragment>\n      <p className=\"text-advise\">Vuelve al listado</p>\n      <div className=\"box__link-back\">\n      <Link to=\"/\" className=\"link-back\">Volver</Link>\n      </div>\n      </React.Fragment>\n    );\n  }\n  const character = characters.filter(item => item.id === characterId);\n  \n  if (character[0]) {\n    const {\n      image,\n      name,\n      species,\n      origin,\n      episode,\n      status\n    } = character[0];\n    return(\n      <React.Fragment>\n        <div className=\"box-detail\">\n          <div className=\"box__detail-image\">\n            <img className=\"character__detail-image\" src={image} alt={`Personaje ${name} de Rick & Morty`} />\n          </div>\n          <div className=\"box__detail-info\">\n            <h2>Nombre: {name}</h2>\n            <p><strong>Especie: </strong>{species}</p>\n            <p><strong>Origen:</strong> {origin.name}</p>\n            <p><strong>Nº episiodios:</strong> {episode.length}</p> \n            <p><strong>Estado:</strong> {status} {(status === 'Alive') ? <i className=\"fab fa-creative-commons-sampling\"></i> : `${status}`}</p>\n          </div>\n          <div className=\"box__link-back\">\n            <Link to=\"/\" className=\"link-back\">Volver</Link>\n          </div>\n        </div>\n      </React.Fragment>\n  );\n  } else {\n    return( \n      <React.Fragment>\n        <p className=\"text-advise\">Lo siento, información no encontrada</p>\n        <div className=\"box__link-back\">\n        <Link to=\"/\" className=\"link-back\">Volver</Link>\n        </div>\n      </React.Fragment>\n    );\n}\n};\n\n\nCharacterDetail.propTypes = {\n  routerProps: PropTypes.object.isRequired,\n  characters:PropTypes.arrayOf(PropTypes.object).isRequired \n};\n\nexport default CharacterDetail;","import React from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport fetchCharacters from './services/fetchCharacters';\nimport Home from './components/Home';\nimport CharacterDetail from './components/CharacterDetail';\nimport {Switch, Route} from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters: [],\n      query: ''\n    }\n    this.getUserQuery = this.getUserQuery.bind(this);\n  }\n  \n  getUserQuery(event){\n    const query =event.currentTarget.value;\n\n    this.setState({\n      query: query \n      \n    });\n  }\n \n  componentDidMount(){\n    this.getCharacters();\n  }\n\n  getCharacters(){\n    fetchCharacters()\n    .then(data => {\n      this.setState({\n        characters: data.results\n      });\n    });\n  }\n\n  render() {\n    const {\n      characters,\n      query\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <img src={logo} className=\"app-logo\" alt=\"logo\" />\n        </header>\n        <main className=\"app-main\">\n          <Switch>\n            <Route exact path=\"/\" render={ ()=>{\n              return (\n                <Home \n                  getUserQuery={this.getUserQuery}\n                  query={query}\n                  characters={characters}\n                /> \n              );\n            }} />\n            <Route path=\"/character-detail/:characterId\" render={(routerProps => {\n              return ( \n                <CharacterDetail  \n                  routerProps= {routerProps}\n                  characters={characters}\n                />\n              );  \n            })}\n              />\n            \n          </Switch>\n             \n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}